// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  arcs.views.Home = (function(superClass) {
    extend(Home, superClass);

    function Home() {
      return Home.__super__.constructor.apply(this, arguments);
    }

    Home.prototype.initialize = function(options) {
      _.extend(this.options, _.pick(options, "el"));
      this.search = new arcs.utils.Search({
        container: $('.search-wrapper'),
        run: false,
        onSearch: (function(_this) {
          return function() {
            return location.href = arcs.url('search', _this.search.query);
          };
        })(this)
      });
      return this.renderDetails($('details:first'));
    };

    Home.prototype.events = {
      'click summary': 'onClick'
    };

    Home.prototype.onClick = function(e) {
      var $el;
      $el = $(e.currentTarget).parent();
      $el.toggleAttr('open');
      this.renderDetails($el);
      e.preventDefault();
      return false;
    };

    Home.prototype.renderDetails = function($el) {
      var query, type;
      type = $el.data('type');
      query = encodeURIComponent("Type,=," + type);
      return $.getJSON(arcs.baseURL + ("resources/search?n=12&q=" + query), function(response) {
        var html;
        html = arcs.tmpl('home/details', {
          resources: response.results
        });
        return $el.children('div').html(html);
      });
    };

    return Home;

  })(Backbone.View);

}).call(this);
