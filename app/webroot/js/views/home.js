// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  arcs.views.Home = (function(superClass) {
    extend(Home, superClass);

    function Home() {
      return Home.__super__.constructor.apply(this, arguments);
    }

    Home.prototype.initialize = function(options) {
      _.extend(this.options, _.pick(options, "el"));
      this.search = new arcs.utils.Search({
        container: $('.search-wrapper'),
        run: false,
        onSearch: (function(_this) {
          return function() {
            return location.href = arcs.url('search', _this.search.query);
          };
        })(this)
      });
      return $('details:first').children().eq(0).trigger("click");
    };

    Home.prototype.events = {
      'click summary': 'onClick',
      'click .btn-show-all': 'onClick'
    };

    Home.prototype.onClick = function(e) {
      var $el, limit, src;
      console.log(e.currentTarget.tagName);
      if (e.currentTarget.tagName === 'SUMMARY') {
        $el = $(e.currentTarget).parent();
        $el.toggleAttr('open');
        limit = 1;
      } else if (e.currentTarget.className === 'btn-show-all') {
        $el = $(e.currentTarget).parent().parent().parent().parent();
        $(e.currentTarget).removeClass('btn-show-all');
        src = arcs.baseURL + 'img/arcs-preloader.gif';
        $(e.currentTarget).find("img:first").attr('src', src);
        limit = 0;
      } else {
        $el = $(e.currentTarget).parent();
        $el.toggleAttr('open');
        limit = 0;
      }
      this.renderDetails($el, limit);
      e.preventDefault();
      return false;
    };

    Home.prototype.renderDetails = function($el, limit) {
      var query, query2, type;
      type = $el.data('type');
      query = encodeURIComponent("Type,=," + type);
      query2 = arcs.baseURL + "resources/search?";
      if (limit !== 0) {
        query2 += "n=15&";
      }
      return $.getJSON(query2 + ("q=" + query), function(response) {
        var html;
        html = arcs.tmpl('home/details', {
          resources: response.results,
          searchURL: arcs.baseURL + "collection/"
        });
        return $el.children('div').html(html);
      });
    };

    return Home;

  })(Backbone.View);

}).call(this);
