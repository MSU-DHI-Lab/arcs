// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  arcs.views.Profile = (function(superClass) {
    extend(Profile, superClass);

    function Profile() {
      return Profile.__super__.constructor.apply(this, arguments);
    }

    Profile.prototype.events = {
      'click #edit-profile': 'editAccount'
    };

    Profile.prototype.editAccount = function() {
      return new arcs.views.Modal({
        title: 'Edit Your Account',
        subtitle: "If you'd like your password to stay the same, leave the " + "password field blank.",
        inputs: {
          name: {
            value: this.model.get('name')
          },
          username: {
            value: this.model.get('username')
          },
          email: {
            value: this.model.get('email')
          },
          password: {
            type: 'password'
          }
        },
        buttons: {
          save: {
            validate: true,
            "class": 'btn btn-success',
            callback: (function(_this) {
              return function(vals) {
                if (vals.password === '') {
                  delete vals.password;
                }
                arcs.loader.show();
                return _this.model.save(vals, {
                  success: function(model, response, options) {
                    console.log("Model successfully saved.");
                    arcs.loader.hide();
                  },
                  error: function(model, response, options) {
                    console.log("Error: Model failed to save.");
                    arcs.loader.hide();
                  }
                });
              };
            })(this)
          },
          cancel: function() {}
        }
      });
    };

    return Profile;

  })(Backbone.View);

}).call(this);
