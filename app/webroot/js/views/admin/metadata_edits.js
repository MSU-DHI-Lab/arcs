// Generated by CoffeeScript 1.10.0
(function() {
  var base,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  if ((base = arcs.views).admin == null) {
    base.admin = {};
  }

  arcs.views.admin.Metadata_edits = (function(superClass) {
    extend(Metadata_edits, superClass);

    function Metadata_edits() {
      return Metadata_edits.__super__.constructor.apply(this, arguments);
    }

      Metadata_edits.prototype.initialize = function(options) {
      _.extend(this.options, _.pick(options, 'el', 'collection'));
      this.collection.on('add remove change sync', this.render, this);
      return this.render();
    };

      Metadata_edits.prototype.render = function() {
      this.$('#metadata_edits').html(arcs.tmpl('admin/metadata_edits', {
          metadata_edits: this.collection.toJSON()
      }));
      return this;
    };

    return Metadata_edits;

  })(Backbone.View);

}).call(this);

$(document).ready(function() {
    
    $(document).on('click', function(e){
		//sorting triggers
		if ($('.sort-by-menu.meta p').is(e.target)){
			if(!$(e.target).hasClass('active')){
				$menu = $('.sort-by-menu');
                if ($(e.target).hasClass('date')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.date').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortByDate();
                } else if ($(e.target).hasClass('resource-kid')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.resource-kid').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortBy('p.resource-kid');
				} else if ($(e.target).hasClass('username')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.username').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortBy('p.username');
				} else if ($(e.target).hasClass('metadata-kid')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.metadata-kid').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortByDate('p.metadata-kid');
                    reverseRows();
				} else if ($(e.target).hasClass('field-name')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.field-name').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortBy('p.field-name');
                } else if ($(e.target).hasClass('old-value')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.old-value').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortBy('p.value-before');
                } else if ($(e.target).hasClass('new-value')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.new-value').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortBy('p.new-value');
				} else if ($(e.target).hasClass('ascending')) {
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					reverseRows(); // pagination.js
				} else if ($(e.target).hasClass('descending')) {
					$menu.find('.ascending').removeClass('active');
					$menu.find('.descending').addClass('active');
					reverseRows(); // pagination.js
				}
			}
		} else if ($('.filter-menu.meta p').is(e.target)){
            if(!$(e.target).hasClass('active')){
				$menu = $('.filter-menu.meta');
				if ($(e.target).hasClass('pending')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.pending').addClass('active');
                    filterBy('');
					filterOut('Approved', 'div.actions');
                    filterOut('Rejected', 'div.actions');
				} else if ($(e.target).hasClass('approved')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.approved').addClass('active');
					filterBy('Approved', 'div.actions');
				} else if ($(e.target).hasClass('rejected')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.rejected').addClass('active');
					filterBy('Rejected', 'div.actions');
				} else if ($(e.target).hasClass('all-edits')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.all-edits').addClass('div.actions');
					filterBy('');
				}
                
                $drop.removeClass('open');
                $('.filter-by p.filter-by').text($(e.target).text());

                $('.sort-by-menu p.cat.active').removeClass('active');
                $('.sort-by-menu p.date').addClass('active');
                $('.sort-by-menu p.descending').removeClass('active');
                $('.sort-by-menu p.ascending').addClass('active');
			}
		}
		
	})
	
	//search trigger
	$('.admin-search.meta').keyup(function(e){
        search(this.value, 'p.username');
        
        $('.sort-by-menu p.cat.active').removeClass('active');
        $('.sort-by-menu p.date').addClass('active');
        $('.sort-by-menu p.descending').removeClass('active');
        $('.sort-by-menu p.ascending').addClass('active');
        
        $('.filter-by p.filter-by').text('ALL EDITS');
        $('.filter-menu').find('.active').removeClass('active');
        $('.filter-menu').find('.all-edits').addClass('active');
	})
    
    
    
    
    $('#metadata_edits').on('click', '.delete-flag-btn', function(e){
        var flagID = ($(this).data('id'));
        $(this).parent().html("Rejected").css('color','red');
        console.log($(this));


        $.ajax({
            url: arcs.baseURL + 'admin/editMetadata',
            type: "POST",
            data:  {
                task: 'reject',
                id: flagID,
                reason: 'because',
                api: true,
                email: $(this).data('email')
            },
            success: function (data) {
                location.reload();
            }
        });
    });

    $('#metadata_edits').on('click', '.approve-flag-btn', function(e){
        var resourceKid, metadataKid, fieldName, newValue;
        var id = $(this).parent().parent().attr('data-id');
        $(this).parent().html("Approved").css('color','rgb(255,0,0)');

        $.ajax({
            url: arcs.baseURL + 'admin/editMetadata',
            type: "POST",
            data:  {
                id: id,
                task: 'approve',
                api: true
            },
            success: function (data) {
                console.log(data);
                // location.reload();
            }
        });
    });







    $('#metadata_edits').on('click', '.edit-flag-btn', function(e){
        var oldSelect = $('.flag-select');
        if( $(oldSelect).length > 0 ){
            $('.edit-flag-btn').html('Edit');
            $('.save-flag-btn').removeClass('save-flag-btn').addClass('edit-flag-btn').html('Edit');
        }
        $(this).html('Submit'); //add this back when adding editing later
        $(this).removeClass('edit-flag-btn').addClass('save-flag-btn');
        $('.save-flag-btn').click(); //just auto submit.. no edit option yet.
    });

    $('#metadata_edits').on('click', '.save-flag-btn', function(e){
        var statusBox = $(this).parent().prevAll('.flag-status');
        var updateTo = $(statusBox).find(" :selected").text();
        var flagID = $(this).attr('data-id');
        $.ajax({
            url: arcs.baseURL + 'admin/editMetadata',
            type: "POST",
            data:  {
                status: 'edit',
                id: flagID,
                api: true,
                task: "approve",
                updateTo: updateTo
            },
            success: function (data) {
                location.reload();
            }
        });
    });




    $('.admin-row').each( function() {
        $text = $(this).find('.actions');
        if( $text.html() == 'Approved') {
            $text.css('color', 'green');
        } else if ($text.html() == 'Rejected') {
            $text.css('color', 'red');
        }
    })
});
