// Generated by CoffeeScript 1.10.0
(function() {
    var base,
        extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
        hasProp = {}.hasOwnProperty;

    if ((base = arcs.views).admin == null) {
        base.admin = {};
    }

    arcs.views.admin.Activity = (function(superClass) {
        extend(Activity, superClass);

        function Activity() {
            return Activity.__super__.constructor.apply(this, arguments);
        }

        Activity.prototype.initialize = function(options) {
            _.extend(this.options, _.pick(options, 'el', 'collection'));
            this.collection.on('add remove change sync', this.render, this);
            return this.render();
        };

        Activity.prototype.render = function() {
            this.$('#activity').html(arcs.tmpl('admin/activity', {
                activity: this.collection.toJSON()
            }));
            return this;
        };

        return Activity;

    })(Backbone.View);

}).call(this);




$(document).ready(function() {
	if (!$('.admin-header').hasClass('activity')){
		return;
	}

	function loadProfileImages(namesAndEmails){
		$.ajax({
			url: arcs.baseURL + 'admin/getProfilePics',
			type: "POST",
			data: {'namesAndEmails': namesAndEmails, 'api' : true},
			success: function (profileImgData) {
				var profileUrlsArray = JSON.parse(profileImgData);
				$('div.activity').find('.admin-row').each(function(){
					var username = $(this).find('.username').data('username');
					if( profileUrlsArray.hasOwnProperty(username) ){
						$(this).find('img').attr('src', profileUrlsArray[username]);
					}
				})
			}
		});
	}

	var namesAndEmails = {};
	activityData.forEach(function(row){
		var username = row['username'];
		var email = row['email'];
		if ( !namesAndEmails.hasOwnProperty(row['username']) ){
			namesAndEmails[row['username']] = row['email'];
		}
	});

	loadProfileImages(namesAndEmails);


	$(document).on('click', function(e){
		//sorting triggers
		if ($('.sort-by-menu.activity p').is(e.target)){
			if(!$(e.target).hasClass('active')){
				$menu = $('.sort-by-menu');
				if ($(e.target).hasClass('username')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.username').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortBy('p.username');
				} else if ($(e.target).hasClass('date')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.date').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortByDate();
				} else if ($(e.target).hasClass('type')) {
					$menu.find('.cat.active').removeClass('active');
					$menu.find('.type').addClass('active');
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					sortBy('p.type');
					//reverseRows();
				} else if ($(e.target).hasClass('ascending')) {
					$menu.find('.descending').removeClass('active');
					$menu.find('.ascending').addClass('active');
					reverseRows(); // pagination.js
				} else if ($(e.target).hasClass('descending')) {
					$menu.find('.ascending').removeClass('active');
					$menu.find('.descending').addClass('active');
					reverseRows(); // pagination.js
				}
			}
		} else if ($('.filter-menu p').is(e.target)){
            if(!$(e.target).hasClass('active')){
				$menu = $('.filter-menu');
				console.log('filter click', $(e.target))
				if ($(e.target).hasClass('logins')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.logins').addClass('active');
					filterBy('Logged In', 'p.type');
				} else if ($(e.target).hasClass('new-user')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.new-user').addClass('active');
					filterBy('Create New User', 'p.type');
				} else if ($(e.target).hasClass('new-annotation')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.new-annotation').addClass('active');
					filterBy('Created New Annotation', 'p.type');
				} else if ($(e.target).hasClass('new-flag')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.new-flag').addClass('active');
					filterBy('Created New Flag', 'p.type');
				} else if ($(e.target).hasClass('edited-metadata')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.edited-metadata').addClass('active');
					filterBy('Edited Metadata', 'p.type');
				} else if ($(e.target).hasClass('all-activity')) {
					$menu.find('.active').removeClass('active');
					$menu.find('.all-activity').addClass('active');
					filterBy('');
				}
                
                $drop.removeClass('open');
                $('.filter-by p.filter-by').text($(e.target).text());

                $('.sort-by-menu p.cat.active').removeClass('active');
                $('.sort-by-menu p.date').addClass('active');
                $('.sort-by-menu p.descending').removeClass('active');
                $('.sort-by-menu p.ascending').addClass('active');
			}
		}
		
	})
	
	//search trigger
	$('.admin-search.activity').keyup(function(e){
        search(this.value, 'p.username');
        
        $('.sort-by-menu p.cat.active').removeClass('active');
        $('.sort-by-menu p.date').addClass('active');
        $('.sort-by-menu p.descending').removeClass('active');
        $('.sort-by-menu p.ascending').addClass('active');
        
        $('.filter-by p.filter-by').text('ALL ACTIVITY');
        $('.filter-menu').find('.active').removeClass('active');
        $('.filter-menu').find('.all-activity').addClass('active');
	})
})