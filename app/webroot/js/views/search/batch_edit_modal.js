// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  arcs.views.BatchEditModal = (function(superClass) {
    var initialize;

    extend(BatchEditModal, superClass);

    function BatchEditModal() {
      return BatchEditModal.__super__.constructor.apply(this, arguments);
    }

    initialize = function(options) {
      _.extend(this, _.pick(options, 'title', 'subtitle', 'template', 'inputs', 'buttons'));
      this.$('input[type=text][id^=modal]').change((function(_this) {
        return function(e) {
          return _this._checkBox($(e.currentTarget));
        };
      })(this));
      this.$('input[type=text][id^=modal]').keyup((function(_this) {
        return function(e) {
          return _this._checkBox($(e.currentTarget));
        };
      })(this));
      return this.$('select[id^=modal]').change((function(_this) {
        return function(e) {
          return _this._checkBox($(e.currentTarget));
        };
      })(this));
    };

    BatchEditModal.prototype._checkBox = function($el) {
      var ckbox, id, name, ref;
      ref = $el.attr('id').match(/modal-([\w-]+)-input/), id = ref[0], name = ref[1];
      ckbox = $("input#modal-" + name + "-checkbox");
      if (!$el.val()) {
        return ckbox.prop('checked', false);
      }
      return ckbox.prop('checked', true);
    };

    BatchEditModal.prototype.getValues = function() {
      var name, values;
      values = {};
      for (name in this.options.inputs) {
        if (this.$("input#modal-" + name + "-checkbox").is(':checked')) {
          values[name] = this.$("#modal-" + name + "-input").val();
        }
      }
      return values;
    };

    return BatchEditModal;

  })(arcs.views.Modal);

}).call(this);
